<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>xujiajiadexiaokeai</title><link>https://xujiajiadexiaokeai.github.io/</link><description>Recent content on xujiajiadexiaokeai</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© 2021-2022 xujiajiadexiaokeai</copyright><lastBuildDate>Fri, 25 Mar 2022 22:06:30 +0800</lastBuildDate><atom:link href="https://xujiajiadexiaokeai.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Red Black Tree</title><link>https://xujiajiadexiaokeai.github.io/2022-03-25/red-black-tree/</link><pubDate>Fri, 25 Mar 2022 22:06:30 +0800</pubDate><guid>https://xujiajiadexiaokeai.github.io/2022-03-25/red-black-tree/</guid><description>23333</description><content>&lt;p>23333&lt;/p></content></item><item><title>AVLTree</title><link>https://xujiajiadexiaokeai.github.io/2022-03-25/avl-tree/</link><pubDate>Fri, 25 Mar 2022 20:32:48 +0800</pubDate><guid>https://xujiajiadexiaokeai.github.io/2022-03-25/avl-tree/</guid><description>特征 · 左右子树的高度差小于等于1
· 每一个子树均为平衡二叉树
原理 监督机制 监督指标: 平衡因子(Balance Factor): 某个节点的左子树高度-右子树高度的差值
所以AVL树是一种所有节点的平衡因子的绝对值都不超过1的二叉树
高度 type Node struct { Data int Height int left *Node right *Node } 计算节点高度
func (n *Node) TreeHeight() int { if n == nil { return 0 } else { return max(treeHeight(n.left), treeHeight(n.right)) + 1 } } 在进行如下操作时,需要更新受影响的所有节点的高度
在插入节点时, 沿插入的路径更新节点的高度值
在删除节点时, 沿删除的路径更新节点的高度值
计算平衡因子
func (n *Node) treeBalanceFactor() { if n == nil { return 0 } else { return x.</description><content>&lt;h1 id="特征">特征&lt;/h1>
&lt;p>· 左右子树的高度差小于等于1&lt;/p>
&lt;p>· 每一个子树均为平衡二叉树&lt;/p>
&lt;h1 id="原理">原理&lt;/h1>
&lt;h2 id="监督机制">监督机制&lt;/h2>
&lt;h3 id="监督指标">监督指标:&lt;/h3>
&lt;p>&lt;strong>平衡因子&lt;/strong>(Balance Factor): 某个节点的左子树高度-右子树高度的差值&lt;/p>
&lt;p>所以AVL树是一种所有节点的平衡因子的绝对值都不超过1的二叉树&lt;/p>
&lt;h3 id="高度">高度&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Node&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;span style="color:#a6e22e">Data&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>
&lt;span style="color:#a6e22e">Height&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>
&lt;span style="color:#a6e22e">left&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Node&lt;/span>
&lt;span style="color:#a6e22e">right&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Node&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>计算节点高度&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Node&lt;/span>) &lt;span style="color:#a6e22e">TreeHeight&lt;/span>() &lt;span style="color:#66d9ef">int&lt;/span> {
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
} &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">max&lt;/span>(&lt;span style="color:#a6e22e">treeHeight&lt;/span>(&lt;span style="color:#a6e22e">n&lt;/span>.&lt;span style="color:#a6e22e">left&lt;/span>), &lt;span style="color:#a6e22e">treeHeight&lt;/span>(&lt;span style="color:#a6e22e">n&lt;/span>.&lt;span style="color:#a6e22e">right&lt;/span>)) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在进行如下操作时,需要更新受影响的所有节点的高度&lt;/p>
&lt;ol>
&lt;li>
&lt;p>在插入节点时, 沿插入的路径更新节点的高度值&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在删除节点时, 沿删除的路径更新节点的高度值&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>计算平衡因子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Node&lt;/span>) &lt;span style="color:#a6e22e">treeBalanceFactor&lt;/span>() {
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
} &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">x&lt;/span>.&lt;span style="color:#a6e22e">left&lt;/span>.&lt;span style="color:#a6e22e">height&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#a6e22e">x&lt;/span>.&lt;span style="color:#a6e22e">right&lt;/span>.&lt;span style="color:#a6e22e">height&lt;/span>
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="再平衡">再平衡&lt;/h2>
&lt;p>左旋和右旋&lt;/p>
&lt;p>在整个平衡化过程可能进行一次或多次,从失去平衡的最小子树根节点开始&lt;/p>
&lt;p>右旋:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Node&lt;/span>) &lt;span style="color:#a6e22e">treeRotateRight&lt;/span>() {
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>左旋&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Node&lt;/span>) &lt;span style="color:#a6e22e">treeRotateLeft&lt;/span>() {
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="需要平衡的四种情况">需要平衡的四种情况&lt;/h3>
&lt;ol>
&lt;li>LL&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://tcs.teambition.net/storage/312g482677e05394fcde6d8d0ff8553342f9?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9hcHBJZCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTY0ODgxNTcxMSwiaWF0IjoxNjQ4MjEwOTExLCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzMxMmc0ODI2NzdlMDUzOTRmY2RlNmQ4ZDBmZjg1NTMzNDJmOSJ9.KVRPdEsaV4Vj5BLRVmHR3h0wpKwsW_zMh-s8HUdt3aU&amp;amp;download=image.png" alt="" title="">&lt;/p>
&lt;ol start="2">
&lt;li>
&lt;p>RR&lt;/p>
&lt;/li>
&lt;li>
&lt;p>LR&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://tcs.teambition.net/storage/312g335de979fb780cfd8a48c2348c1cc61f?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9hcHBJZCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTY0ODgxNTcxMSwiaWF0IjoxNjQ4MjEwOTExLCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzMxMmczMzVkZTk3OWZiNzgwY2ZkOGE0OGMyMzQ4YzFjYzYxZiJ9.88VeeegnYTUu9r94DBtMln21URc3Dus40r0lOQyvM6U&amp;amp;download=image.png" alt="" title="">&lt;/p>
&lt;ol start="4">
&lt;li>RL&lt;/li>
&lt;/ol></content></item><item><title>My First Post</title><link>https://xujiajiadexiaokeai.github.io/posts/my-first-post/</link><pubDate>Sat, 12 Feb 2022 13:17:00 +0800</pubDate><guid>https://xujiajiadexiaokeai.github.io/posts/my-first-post/</guid><description>111</description><content>&lt;p>111&lt;/p></content></item><item><title>Posts Archive</title><link>https://xujiajiadexiaokeai.github.io/top/archive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xujiajiadexiaokeai.github.io/top/archive/</guid><description/><content/></item><item><title>关于我</title><link>https://xujiajiadexiaokeai.github.io/top/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xujiajiadexiaokeai.github.io/top/about/</guid><description>姜文浩 出生年月 1997年11月 所在城市 中国 上海 Email whjiang1997@gmail.com Phone +86 15900544142 Github https://github.com/xujiajiadexiaokeai Blog https://xujiajiadexiaokeai.github.io 教育经历 2015.9 - 2019.6 上海第二工业大学 计算机与信息工程学院 软件工程系
专业技能 熟悉Golang,Node.js 1年B端SaaS研发经验,有大量排查问题经历 对系统虚拟化有一定研究,了解容器编排、调度相关设计与实现 熟悉分布式原理,了解Paxos、Raft等一致性算法,并参照论文进行了实现 对数据复制、分区和事务中存在的问题有一定了解及思考 熟悉HTTP相关网络协议,知悉优劣,了解grpc 了解网络安全,了解web攻防技能 了解设计模式,DDD开发思想,混沌工程 工作经历 2020.8 - 2021.8 软通动力技术服务上海有限公司(阿里巴巴钉钉事业部Teambition团队) 推动脚本&amp;quot;dryRun&amp;quot;及可回滚</description><content>&lt;h2 id="姜文浩">姜文浩&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>出生年月&lt;/td>
&lt;td>1997年11月&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>所在城市&lt;/td>
&lt;td>中国 上海&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Email&lt;/td>
&lt;td>&lt;a href="mailto:whjiang1997@gmail.com">whjiang1997@gmail.com&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Phone&lt;/td>
&lt;td>+86 15900544142&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Github&lt;/td>
&lt;td>&lt;a href="https://github.com/xujiajiadexiaokeai">https://github.com/xujiajiadexiaokeai&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Blog&lt;/td>
&lt;td>&lt;a href="https://xujiajiadexiaokeai.github.io">https://xujiajiadexiaokeai.github.io&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="教育经历">教育经历&lt;/h1>
&lt;p>&lt;strong>2015.9 - 2019.6&lt;/strong> 上海第二工业大学 计算机与信息工程学院 软件工程系&lt;/p>
&lt;h2 id="专业技能">专业技能&lt;/h2>
&lt;ul>
&lt;li>熟悉Golang,Node.js&lt;/li>
&lt;li>1年B端SaaS研发经验,有大量排查问题经历&lt;/li>
&lt;li>对系统虚拟化有一定研究,了解容器编排、调度相关设计与实现&lt;/li>
&lt;li>熟悉分布式原理,了解Paxos、Raft等一致性算法,并参照论文进行了实现&lt;/li>
&lt;li>对数据复制、分区和事务中存在的问题有一定了解及思考&lt;/li>
&lt;li>熟悉HTTP相关网络协议,知悉优劣,了解grpc&lt;/li>
&lt;li>了解网络安全,了解web攻防技能&lt;/li>
&lt;li>了解设计模式,DDD开发思想,混沌工程&lt;/li>
&lt;/ul>
&lt;h2 id="工作经历">工作经历&lt;/h2>
&lt;h3 id="20208---20218-软通动力技术服务上海有限公司阿里巴巴钉钉事业部teambition团队">2020.8 - 2021.8 软通动力技术服务上海有限公司(阿里巴巴钉钉事业部Teambition团队)&lt;/h3>
&lt;p>&lt;strong>推动脚本&amp;quot;dryRun&amp;quot;及可回滚&lt;/strong>&lt;/p>
&lt;p>&lt;strong>推动故障排查手册的建立&lt;/strong>&lt;/p>
&lt;hr>
&lt;h3 id="20194---20206-上海妙点网络科技有限公司">2019.4 - 2020.6 上海妙点网络科技有限公司&lt;/h3>
&lt;h2 id="感兴趣的领域">感兴趣的领域&lt;/h2>
&lt;ul>
&lt;li>基于eBPF增强系统可观测性&lt;/li>
&lt;li>基于Kubernetes的容器调度策略&lt;/li>
&lt;li>基于Kubernetes的Aplication Runtime实现&lt;/li>
&lt;li>基于risc-v架构的操作系统内核实现&lt;/li>
&lt;/ul></content></item></channel></rss>